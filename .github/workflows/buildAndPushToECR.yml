name: Build Image And Push to AWS ECR

on:
  workflow_call:
    inputs: 
      region: 
        type: string
        required: true
      repo:
        type: string
        required: true
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true 
      AWS_SECRET_ACCESS_KEY:
        required: true 

jobs:
  connect-push-to-ecr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build Image
        env: 
          ENV: ${{ secrets.ENV }}
          ENV_STAGGING: ${{ secrets.ENV_STAGGING }}
        run: |
          echo "$ENV" > .env

          if [[ ${{ inputs.repo }} == *"stagging"* ]]; then 
            echo "$ENV_STAGGING" > .env
          fi 

          docker build -t artefact .

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.region }}
          
      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Push to AWS ECR
        env: 
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPO: ${{ inputs.repo }}
          TAG: ${{ github.sha }}
        run: |
          docker tag artefact:latest $REGISTRY/$REPO:$TAG
          docker tag $REGISTRY/$REPO:$TAG $REGISTRY/$REPO:latest 
          echo "Pushing image to ECR..."
          docker push $REGISTRY/$REPO:$TAG
          docker push $REGISTRY/$REPO:latest
          
      - name: Delete old images
        uses: LeiaInc/devops-delete-old-aws-ecr-images@v1
        with:
            repo-name: ${{ inputs.repo }}
            qtd-images: 3
      